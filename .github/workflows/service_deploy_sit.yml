name: Deployment SIT
on:
  workflow_dispatch:
    inputs:
      npaApiVersion:
        description: "NPA API version"
        required: true
      pamcoVersion:
        description: "Pamco version"
        required: true
      propertyApiVersion:
        description: "Property API version"
        required: true
      npaCmsVersion:
        description: "NPA CMS version"
        required: true
      npaWebVersion:
        description: "NPA WEB version"
        required: true
jobs:
  deploy:
    name: "Deploy to SIT"
    runs-on: ubuntu-latest
    # needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Configure SSH
        run: |
          sh version-sit.sh $NPA_API_VERSION $PAMCO_VERSION $PROPERTY_API_VERSION $NPA_CMS_VERSION $NPA_WEB_VERSION
          cat sit-compose.yml
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/bom-infra.pem
          chmod 600 ~/.ssh/bom-infra.pem
          cat >>~/.ssh/config <<END
          Host bom-nonprod
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/bom-infra.pem
            StrictHostKeyChecking no
          Host bom-nonprod-web
            HostName $PROXY_SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/bom-infra.pem
            ProxyJump bom-nonprod
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.USERNAME }}
          SSH_KEY: ${{ secrets.KEY }}
          SSH_HOST: ${{ secrets.HOST }}
          PROXY_SSH_HOST: ${{ secrets.PROXY_HOST_SIT }}
          NPA_API_VERSION: ${{ github.event.inputs.npaApiVersion }}
          PAMCO_VERSION: ${{ github.event.inputs.pamcoVersion }}
          PROPERTY_API_VERSION: ${{ github.event.inputs.propertyApiVersion }}
          NPA_CMS_VERSION: ${{ github.event.inputs.npaCmsVersion }}
          NPA_WEB_VERSION: ${{ github.event.inputs.npaWebVersion }}
      - name: Check
        run: ssh -J bom-nonprod bom-nonprod-web 'whoami'
      - name: Copy file
        run: scp -o ProxyJump=bom-nonprod sit-compose.yml bom-nonprod-web:~
      - name: ECR Login
        run: ssh -J bom-nonprod bom-nonprod-web 'aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 606064476606.dkr.ecr.ap-southeast-1.amazonaws.com'
      - name: Down service container
        run: ssh -J bom-nonprod bom-nonprod-web 'docker-compose -f sit-compose.yml down'
      - name: Remove image older than 10 days
        run: ssh -J bom-nonprod bom-nonprod-web 'docker image prune -a --force --filter "until=240h"'
      - name: Start service container
        run: ssh -J bom-nonprod bom-nonprod-web 'docker-compose -f sit-compose.yml up -d'
